// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTree.Models;

namespace MyTree.Migrations
{
    [DbContext(typeof(MyTreeDbContext))]
    partial class MyTreeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyTree.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("MyTree.Models.Pair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsTogether");

                    b.HasKey("Id");

                    b.ToTable("Pair");
                });

            modelBuilder.Entity("MyTree.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FK_AdoptedPair");

                    b.Property<int?>("FK_ParentPair");

                    b.Property<int>("FamilyId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("FK_AdoptedPair");

                    b.HasIndex("FK_ParentPair");

                    b.HasIndex("FamilyId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("MyTree.Models.PersonPair", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("PairId");

                    b.HasKey("PersonId", "PairId");

                    b.HasIndex("PairId");

                    b.ToTable("PersonPair");
                });

            modelBuilder.Entity("MyTree.Models.Person", b =>
                {
                    b.HasOne("MyTree.Models.Pair")
                        .WithMany("AdoptedChildren")
                        .HasForeignKey("FK_AdoptedPair");

                    b.HasOne("MyTree.Models.Pair")
                        .WithMany("Children")
                        .HasForeignKey("FK_ParentPair");

                    b.HasOne("MyTree.Models.Family", "Family")
                        .WithMany("People")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyTree.Models.PersonPair", b =>
                {
                    b.HasOne("MyTree.Models.Pair", "Pair")
                        .WithMany("Partners")
                        .HasForeignKey("PairId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyTree.Models.Person", "Person")
                        .WithMany("Relationships")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
